13:48 [32mControllerContainerAllowingPrivilegeEscalation [input/policies][0m
# Containers Running With Privilege Escalation

Containers are running with PrivilegeEscalation configured. Setting this Policy to `true` allows child processes to gain more privileges than its parent process.  

This Policy gates whether or not a user is allowed to set the security context of a container to `allowPrivilegeEscalation` to `true`. The default value for this is `false` so no child process of a container can gain more privileges than its parent.

There are 2 parameters for this Policy:
- exclude_namespace (string) : This sets a namespace you want to exclude from Policy compliance checking. 
- allow_privilege_escalation (bool) : This checks for the value of `allowPrivilegeEscalation` in your spec.  


Check the following path to see what the PrivilegeEscalation value is set to.
```
...
  spec:
    containers:
      securityContext:
        allowPrivilegeEscalation: <value>
```
https://kubernetes.io/docs/tasks/configure-pod-container/security-context/


# Settings
```yaml
  settings:
    parameters:
      - name: exclude_namespaces
        type: array
        required: true
        value: [kube-system]
      - name: allow_privilege_escalation
        type: boolean
        required: true
        value: false
      - name: exclude_label_key
        type: string
        required: false
        value:
      - name: exclude_label_value
        type: string
        required: false
        value:
```

# Resources
Policy applies to resources kinds:
`Deployment`, `Job`, `ReplicationController`, `ReplicaSet`, `DaemonSet`, `StatefulSet`, `CronJob`
rules:
  - apiGroups: [apps]
    apiVersions: [v1]
    resources: [deployments, replicasets, daemonsets, statefulsets]
    operations: [CREATE, UPDATE]
  - apiGroups: [batch]
    apiVersions: [v1]
    resources: [jobs, cronjobs]
    operations: [CREATE, UPDATE]
  - apiGroups: [""]
    apiVersions: [v1]
    resources: [replicationcontrollers]
    operations: [CREATE, UPDATE]
mutating: false
executionMode: gatekeeper
backgroundAudit: true
annotations:
  io.artifacthub.displayName: Containers Running With Privilege Escalation
  io.artifacthub.keywords: pci-dss, cis-benchmark, mitre-attack, nist800-190, gdpr, default, soc2-type1
  io.artifacthub.resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet, StatefulSet, CronJob
  io.kubewarden.policy.title: containers-running-with-privilege-escalation
  io.kubewarden.policy.description: "Containers are running with PrivilegeEscalation configured. Setting this Policy to `true` allows child processes to gain more privileges than its parent process.  \n\nThis Policy gates whether or not a user is allowed to set the security context of a container to `allowPrivilegeEscalation` to `true`. The default value for this is `false` so no child process of a container can gain more privileges than its parent.\n\nThere are 2 parameters for this Policy:\n- exclude_namespace (string) : This sets a namespace you want to exclude from Policy compliance checking. \n- allow_privilege_escalation (bool) : This checks for the value of `allowPrivilegeEscalation` in your spec.  \n"
  io.kubewarden.policy.author: Kubewarden developers <cncf-kubewarden-maintainers@lists.cncf.io>
  io.kubewarden.policy.ociUrl: ghcr.io/kubewarden/policies/containers-running-with-privilege-escalation
  io.kubewarden.policy.url: https://github.com/kubewarden/rego-policies
  io.kubewarden.policy.source: https://github.com/kubewarden/rego-policies
  io.kubewarden.policy.license: Apache-2.0
  io.kubewarden.policy.category: pod-security
  io.kubewarden.policy.severity: high
  io.kubewarden.policy.standards.pci-dss: pci-dss.2.2.4, pci-dss.2.2.5
  io.kubewarden.policy.standards.cis-benchmark: cis-benchmark.5.2.5
  io.kubewarden.policy.standards.mitre-attack: mitre-attack.4.1
  io.kubewarden.policy.standards.nist-800-190: nist-800-190.3.3.2
  io.kubewarden.policy.standards.gdpr: gdpr.25, gdpr.32, gdpr.24
  io.kubewarden.policy.standards.soc2-type-i: soc2-type-i.1.6.1
2024/12/12 13:48:52 Testing ControllerContainerAllowingPrivilegeEscalation policy
make: Entering directory '/home/kravciak/git/kw/policies/weaveworks/output/staging/ControllerContainerAllowingPrivilegeEscalation'
Makefile:25: If you are updating the artifacthub-pkg.yml file for a release, remember to set the VERSION variable with the proper value. To use the latest tag, use the following command: make VERSION=$(git describe --tags --abbrev=0 | sed 's/\(.*\)\/\(.*\)\2/' | cut -c2-) annotated-policy.wasm
kwctl scaffold artifacthub \
    --metadata-path metadata.yml --version 0.0.1 --output artifacthub-pkg.yml
make: Leaving directory '/home/kravciak/git/kw/policies/weaveworks/output/staging/ControllerContainerAllowingPrivilegeEscalation'
make: Entering directory '/home/kravciak/git/kw/policies/weaveworks/output/staging/ControllerContainerAllowingPrivilegeEscalation'
opa build -t wasm -e policy/violation -o bundle.tar.gz policy.rego
tar xvf bundle.tar.gz /policy.wasm
tar: Removing leading `/' from member names
/policy.wasm
rm bundle.tar.gz
touch policy.wasm # opa creates the bundle with unix epoch timestamp, fix it
kwctl annotate -m metadata.yml -u README.md -o annotated-policy.wasm policy.wasm
make: Leaving directory '/home/kravciak/git/kw/policies/weaveworks/output/staging/ControllerContainerAllowingPrivilegeEscalation'
13:48 [32mControllerContainerBlockHostPath [input/policies][0m
# Containers Using Hostpath

This Policy checks for containers that are trying to use HostPath. 

A `hostPath` volume mounts a file or directory from the host node's filesystem into your Pod. This is not something that most Pods will need, but it offers a powerful escape hatch for some applications.


Using HostPath could allow mounting the entire hostâ€™s filesystem into your pod, giving you read/write access on the hostâ€™s filesystem. This leaves your cluster vulnerable to escape Kubernetes constraints and access components at the Node (OS) level. 
```
...
  spec:
    template:
      spec:
        volumes:
          - hostPath:
```


# Settings
```yaml
  settings:
    parameters:
      - name: hostpath_key
        type: string
        required: true
        value: hostPath
      - name: exclude_namespaces
        type: array
        required: false
        value:
      - name: exclude_label_key
        type: string
        required: false
        value:
      - name: exclude_label_value
        type: string
        required: false
        value:
```

# Resources
Policy applies to resources kinds:
`Deployment`, `Job`, `ReplicationController`, `ReplicaSet`, `DaemonSet`, `StatefulSet`, `CronJob`
rules:
  - apiGroups: [apps]
    apiVersions: [v1]
    resources: [deployments, replicasets, daemonsets, statefulsets]
    operations: [CREATE, UPDATE]
  - apiGroups: [batch]
    apiVersions: [v1]
    resources: [jobs, cronjobs]
    operations: [CREATE, UPDATE]
  - apiGroups: [""]
    apiVersions: [v1]
    resources: [replicationcontrollers]
    operations: [CREATE, UPDATE]
mutating: false
executionMode: gatekeeper
backgroundAudit: true
annotations:
  io.artifacthub.displayName: Containers Using Hostpath
  io.artifacthub.keywords: mitre-attack, nist800-190, gdpr, default
  io.artifacthub.resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet, StatefulSet, CronJob
  io.kubewarden.policy.title: containers-using-hostpath
  io.kubewarden.policy.description: "This Policy checks for containers that are trying to use HostPath. \n\nA `hostPath` volume mounts a file or directory from the host node's filesystem into your Pod. This is not something that most Pods will need, but it offers a powerful escape hatch for some applications.\n"
  io.kubewarden.policy.author: Kubewarden developers <cncf-kubewarden-maintainers@lists.cncf.io>
  io.kubewarden.policy.ociUrl: ghcr.io/kubewarden/policies/containers-using-hostpath
  io.kubewarden.policy.url: https://github.com/kubewarden/rego-policies
  io.kubewarden.policy.source: https://github.com/kubewarden/rego-policies
  io.kubewarden.policy.license: Apache-2.0
  io.kubewarden.policy.category: pod-security
  io.kubewarden.policy.severity: high
  io.kubewarden.policy.standards.mitre-attack: mitre-attack.3.2
  io.kubewarden.policy.standards.nist-800-190: nist-800-190.4.4.5
  io.kubewarden.policy.standards.gdpr: gdpr.25, gdpr.32, gdpr.24
2024/12/12 13:48:52 Testing ControllerContainerBlockHostPath policy
make: Entering directory '/home/kravciak/git/kw/policies/weaveworks/output/staging/ControllerContainerBlockHostPath'
Makefile:25: If you are updating the artifacthub-pkg.yml file for a release, remember to set the VERSION variable with the proper value. To use the latest tag, use the following command: make VERSION=$(git describe --tags --abbrev=0 | sed 's/\(.*\)\/\(.*\)\2/' | cut -c2-) annotated-policy.wasm
kwctl scaffold artifacthub \
    --metadata-path metadata.yml --version 0.0.1 --output artifacthub-pkg.yml
make: Leaving directory '/home/kravciak/git/kw/policies/weaveworks/output/staging/ControllerContainerBlockHostPath'
make: Entering directory '/home/kravciak/git/kw/policies/weaveworks/output/staging/ControllerContainerBlockHostPath'
opa build -t wasm -e policy/violation -o bundle.tar.gz policy.rego
tar xvf bundle.tar.gz /policy.wasm
tar: Removing leading `/' from member names
/policy.wasm
rm bundle.tar.gz
touch policy.wasm # opa creates the bundle with unix epoch timestamp, fix it
kwctl annotate -m metadata.yml -u README.md -o annotated-policy.wasm policy.wasm
make: Leaving directory '/home/kravciak/git/kw/policies/weaveworks/output/staging/ControllerContainerBlockHostPath'
13:48 [32mControllerContainerBlockPortsRange [input/policies][0m
# Containers Block Ports Range

This Policy checks for container ports that are set below the set value. TCP ports under 1024 are reserved so we recommend setting your Policy to 1024 or higher. 


Choose ports over the value that is specified in the Policy. 
```
...
  spec:
    containers:
      - ports:
        - containerPort: <target_port>
```
https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.txt


# Settings
```yaml
  settings:
    parameters:
      - name: target_port
        type: integer
        required: true
        value: 1024
      - name: exclude_namespaces
        type: array
        required: false
        value:
      - name: exclude_label_key
        type: string
        required: false
        value:
      - name: exclude_label_value
        type: string
        required: false
        value:
```

# Resources
Policy applies to resources kinds:
`Deployment`, `Job`, `ReplicationController`, `ReplicaSet`, `DaemonSet`, `StatefulSet`, `CronJob`
rules:
  - apiGroups: [apps]
    apiVersions: [v1]
    resources: [deployments, replicasets, daemonsets, statefulsets]
    operations: [CREATE, UPDATE]
  - apiGroups: [batch]
    apiVersions: [v1]
    resources: [jobs, cronjobs]
    operations: [CREATE, UPDATE]
  - apiGroups: [""]
    apiVersions: [v1]
    resources: [replicationcontrollers]
    operations: [CREATE, UPDATE]
mutating: false
executionMode: gatekeeper
backgroundAudit: true
annotations:
  io.artifacthub.displayName: Containers Block Ports Range
  io.artifacthub.keywords: pci-dss, nist800-190
  io.artifacthub.resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet, StatefulSet, CronJob
  io.kubewarden.policy.title: containers-block-ports-range
  io.kubewarden.policy.description: "This Policy checks for container ports that are set below the set value. TCP ports under 1024 are reserved so we recommend setting your Policy to 1024 or higher. \n"
  io.kubewarden.policy.author: Kubewarden developers <cncf-kubewarden-maintainers@lists.cncf.io>
  io.kubewarden.policy.ociUrl: ghcr.io/kubewarden/policies/containers-block-ports-range
  io.kubewarden.policy.url: https://github.com/kubewarden/rego-policies
  io.kubewarden.policy.source: https://github.com/kubewarden/rego-policies
  io.kubewarden.policy.license: Apache-2.0
  io.kubewarden.policy.category: network-security
  io.kubewarden.policy.severity: high
  io.kubewarden.policy.standards.pci-dss: pci-dss.1.1.6, pci-dss.2.2.2
  io.kubewarden.policy.standards.nist-800-190: nist-800-190.4.4.2
2024/12/12 13:48:53 Testing ControllerContainerBlockPortsRange policy
make: Entering directory '/home/kravciak/git/kw/policies/weaveworks/output/staging/ControllerContainerBlockPortsRange'
Makefile:25: If you are updating the artifacthub-pkg.yml file for a release, remember to set the VERSION variable with the proper value. To use the latest tag, use the following command: make VERSION=$(git describe --tags --abbrev=0 | sed 's/\(.*\)\/\(.*\)\2/' | cut -c2-) annotated-policy.wasm
kwctl scaffold artifacthub \
    --metadata-path metadata.yml --version 0.0.1 --output artifacthub-pkg.yml
make: Leaving directory '/home/kravciak/git/kw/policies/weaveworks/output/staging/ControllerContainerBlockPortsRange'
make: Entering directory '/home/kravciak/git/kw/policies/weaveworks/output/staging/ControllerContainerBlockPortsRange'
opa build -t wasm -e policy/violation -o bundle.tar.gz policy.rego
tar xvf bundle.tar.gz /policy.wasm
tar: Removing leading `/' from member names
/policy.wasm
rm bundle.tar.gz
touch policy.wasm # opa creates the bundle with unix epoch timestamp, fix it
kwctl annotate -m metadata.yml -u README.md -o annotated-policy.wasm policy.wasm
make: Leaving directory '/home/kravciak/git/kw/policies/weaveworks/output/staging/ControllerContainerBlockPortsRange'
13:48 [32mControllerContainerBlockSSHPort [input/policies][0m
# Containers Block Ssh Port

This Policy checks if the container is exposing ssh port.


Make sure you are not exposing ssh port on containers.
```
...
  spec:
    containers:
      ports:
      - containerPort: <port>
```


# Settings
```yaml
  settings:
    parameters:
      - name: container_port
        type: integer
        required: true
        value: 22
      - name: exclude_namespaces
        type: array
        required: false
        value:
      - name: exclude_label_key
        type: string
        required: false
        value:
      - name: exclude_label_value
        type: string
        required: false
        value:
```

# Resources
Policy applies to resources kinds:
`Deployment`, `Job`, `ReplicationController`, `ReplicaSet`, `DaemonSet`, `StatefulSet`, `CronJob`
rules:
  - apiGroups: [apps]
    apiVersions: [v1]
    resources: [deployments, replicasets, daemonsets, statefulsets]
    operations: [CREATE, UPDATE]
  - apiGroups: [batch]
    apiVersions: [v1]
    resources: [jobs, cronjobs]
    operations: [CREATE, UPDATE]
  - apiGroups: [""]
    apiVersions: [v1]
    resources: [replicationcontrollers]
    operations: [CREATE, UPDATE]
mutating: false
executionMode: gatekeeper
backgroundAudit: true
annotations:
  io.artifacthub.displayName: Containers Block Ssh Port
  io.artifacthub.keywords: pci-dss
  io.artifacthub.resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet, StatefulSet, CronJob
  io.kubewarden.policy.title: containers-block-ssh-port
  io.kubewarden.policy.description: |
    This Policy checks if the container is exposing ssh port.
  io.kubewarden.policy.author: Kubewarden developers <cncf-kubewarden-maintainers@lists.cncf.io>
  io.kubewarden.policy.ociUrl: ghcr.io/kubewarden/policies/containers-block-ssh-port
  io.kubewarden.policy.url: https://github.com/kubewarden/rego-policies
  io.kubewarden.policy.source: https://github.com/kubewarden/rego-policies
  io.kubewarden.policy.license: Apache-2.0
  io.kubewarden.policy.category: network-security
  io.kubewarden.policy.severity: high
  io.kubewarden.policy.standards.pci-dss: pci-dss.1.1.6, pci-dss.1.3.1, pci-dss.2.2.2
make: Entering directory '/home/kravciak/git/kw/policies/weaveworks/output/policies/ControllerContainerBlockSSHPort'
opa test policy.rego tests/*.rego
PASS: 4/4
make: Leaving directory '/home/kravciak/git/kw/policies/weaveworks/output/policies/ControllerContainerBlockSSHPort'
make: Entering directory '/home/kravciak/git/kw/policies/weaveworks/output/policies/ControllerContainerBlockSSHPort'
Makefile:25: If you are updating the artifacthub-pkg.yml file for a release, remember to set the VERSION variable with the proper value. To use the latest tag, use the following command: make VERSION=$(git describe --tags --abbrev=0 | sed 's/\(.*\)\/\(.*\)\2/' | cut -c2-) annotated-policy.wasm
kwctl scaffold artifacthub \
    --metadata-path metadata.yml --version 0.0.1 --output artifacthub-pkg.yml
make: Leaving directory '/home/kravciak/git/kw/policies/weaveworks/output/policies/ControllerContainerBlockSSHPort'
make: Entering directory '/home/kravciak/git/kw/policies/weaveworks/output/policies/ControllerContainerBlockSSHPort'
opa build -t wasm -e policy/violation -o bundle.tar.gz policy.rego
tar xvf bundle.tar.gz /policy.wasm
make: *** [Makefile:10: policy.wasm] Interrupt
