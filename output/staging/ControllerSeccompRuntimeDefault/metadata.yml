rules:
  - apiGroups: [apps]
    apiVersions: [v1]
    resources: [deployments, replicasets, daemonsets, statefulsets]
    operations: [CREATE, UPDATE]
  - apiGroups: [batch]
    apiVersions: [v1]
    resources: [jobs, cronjobs]
    operations: [CREATE, UPDATE]
  - apiGroups: [""]
    apiVersions: [v1]
    resources: [replicationcontrollers]
    operations: [CREATE, UPDATE]
mutating: false
executionMode: gatekeeper
backgroundAudit: true
annotations:
  io.artifacthub.displayName: Containers Not Using Runtime Default Seccomp Profile
  io.artifacthub.keywords: cis-benchmark, nist800-190, soc2-type1
  io.artifacthub.resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet, StatefulSet, CronJob
  io.kubewarden.policy.title: containers-not-using-runtime-default-seccomp-profile
  io.kubewarden.policy.description: "This Policy checks for runtime/default seccomp annotation. \n\nSeccomp stands for secure computing mode and has been a feature of the Linux kernel since version 2.6.12. It can be used to sandbox the privileges of a process, restricting the calls it is able to make from userspace into the kernel. Kubernetes lets you automatically apply seccomp profiles loaded onto a Node to your Pods and containers.\n"
  io.kubewarden.policy.author: Kubewarden developers <cncf-kubewarden-maintainers@lists.cncf.io>
  io.kubewarden.policy.ociUrl: ghcr.io/kubewarden/policies/containers-not-using-runtime-default-seccomp-profile
  io.kubewarden.policy.url: https://github.com/kubewarden/rego-policies
  io.kubewarden.policy.source: https://github.com/kubewarden/rego-policies
  io.kubewarden.policy.license: Apache-2.0
  io.kubewarden.policy.category: pod-security
  io.kubewarden.policy.severity: high
  # io.kubewarden.policy.standards.cis-benchmark: cis-benchmark.5.7.2
  # io.kubewarden.policy.standards.nist-800-190: nist-800-190.4.4.3
  # io.kubewarden.policy.standards.soc2-type-i: soc2-type-i.1.6.1
