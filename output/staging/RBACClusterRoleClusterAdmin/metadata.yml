rules:
  - apiGroups: [rbac.authorization.k8s.io]
    apiVersions: [v1]
    resources: [clusterrolebindings]
    operations: [CREATE, UPDATE]
mutating: false
executionMode: gatekeeper
backgroundAudit: true
annotations:
  io.artifacthub.displayName: Rbac Protect Cluster Admin Clusterrolebindings
  io.artifacthub.keywords: pci-dss, cis-benchmark, mitre-attack, gdpr, hipaa, soc2-type1
  io.artifacthub.resources: ClusterRoleBinding
  io.kubewarden.policy.title: rbac-protect-cluster-admin-clusterrolebindings
  io.kubewarden.policy.description: "This Policy allows you to select which groups you can set for Cluster-admin. The default policy checks for the \n\n```\nsubjects:\n- kind: Group\n  name: system:masters\n```\n\n`cluster-admin` allows super-user access to perform any action on any resource. When used in a ClusterRoleBinding, it gives full control over every resource in the cluster and in all namespaces. When used in a RoleBinding, it gives full control over every resource in the role binding's namespace, including the namespace itself. Be selective when adding additional subjects. \n"
  io.kubewarden.policy.author: Kubewarden developers <cncf-kubewarden-maintainers@lists.cncf.io>
  io.kubewarden.policy.ociUrl: ghcr.io/kubewarden/policies/rbac-protect-cluster-admin-clusterrolebindings
  io.kubewarden.policy.url: https://github.com/kubewarden/rego-policies
  io.kubewarden.policy.source: https://github.com/kubewarden/rego-policies
  io.kubewarden.policy.license: Apache-2.0
  io.kubewarden.policy.category: access-control
  io.kubewarden.policy.severity: high
  # io.kubewarden.policy.standards.pci-dss: pci-dss.7.1.1, pci-dss.7.1.2
  # io.kubewarden.policy.standards.cis-benchmark: cis-benchmark.5.1.1
  # io.kubewarden.policy.standards.mitre-attack: mitre-attack.4.2
  # io.kubewarden.policy.standards.gdpr: gdpr.25, gdpr.32, gdpr.24
  # io.kubewarden.policy.standards.hipaa: hipaa.164.312.a.1
  # io.kubewarden.policy.standards.soc2-type-i: soc2-type-i.1.6.3
